esphome:
  name: pressure
  friendly_name: Pressure
  compile_process_limit: 1

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:
  level: DEBUG
  logs:
    esp32_ble_tracker: DEBUG
    ble_dump: DEBUG
    ble_toothbrush: DEBUG
    esp32_ble_client: DEBUG

wifi:
  ssid: !secret wifi_ssid
  power_save_mode: NONE
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.0.201
    gateway: 192.168.0.1
    subnet: 255.255.255.0

ota:
  platform: esphome

api:
  encryption:
    key: !secret pressure_api

esp32_ble_tracker:
  on_ble_advertise:
    - mac_address: 24:E5:AA:5C:A8:A0
      then:
        - lambda: |-
            ESP_LOGD("ble_toothbrush", "==== TOOTHBRUSH ADV ====");
            ESP_LOGD("ble_toothbrush", "  Address: %s", x.address_str().c_str());
            ESP_LOGD("ble_toothbrush", "  RSSI: %d", x.get_rssi());

            if (!x.get_name().empty()) {
              ESP_LOGD("ble_toothbrush", "  Name: %s", x.get_name().c_str());
            }

            for (const auto &m : x.get_manufacturer_datas()) {
              std::string md = "  Manufacturer data:";
              for (auto byte : m.data) {
                char buf[5];
                snprintf(buf, sizeof(buf), " %02X", byte);
                md += buf;
              }
              ESP_LOGD("ble_toothbrush", "%s", md.c_str());
            }

            for (const auto &uuid : x.get_service_uuids()) {
              ESP_LOGD("ble_toothbrush", "  Service UUID: %s", uuid.to_string().c_str());
            }

            for (const auto &sd : x.get_service_datas()) {
              std::string sd_str = "  Service data (" + sd.uuid.to_string() + "):";
              for (auto byte : sd.data) {
                char buf[5];
                snprintf(buf, sizeof(buf), " %02X", byte);
                sd_str += buf;
              }
              ESP_LOGD("ble_toothbrush", "%s", sd_str.c_str());
            }

            ESP_LOGD("ble_toothbrush", "--------------------------");

ble_client:
  - id: toothbrush_client
    mac_address: 24:E5:AA:5C:A8:A0

sensor:
  - platform: ble_rssi
    mac_address: "24:E5:AA:5C:A8:A0"
    name: "Toothbrush RSSI"
    device_class: signal_strength
    unit_of_measurement: "dBm"
    state_class: measurement
    filters:
      - throttle: 5s

binary_sensor:
  - platform: gpio
    pin:
      number: 13
      inverted: true
      mode: INPUT_PULLUP
    name: Rug Sensor
    device_class: occupancy
    filters:
      - delayed_on: 0s
      - delayed_off: 5s

  - platform: gpio
    pin:
      number: 15
      inverted: true
      mode: INPUT_PULLUP
    name: Bed Sensor
    device_class: occupancy
    filters:
      - delayed_on: 2s
      - delayed_off: 2s

  - platform: ble_presence
    mac_address: "24:E5:AA:5C:A8:A0"
    name: "Toothbrush"
    timeout: 120s
