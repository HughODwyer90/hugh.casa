- sensor:
    - name: "Car GPS Latitude"
      unique_id: "car_gps_latitude_sensor"
      state: "{{ state_attr('device_tracker.car_location', 'latitude') | string }}"
      unit_of_measurement: "degrees"
      icon: "mdi:map-marker"

    - name: "Car GPS Longitude"
      unique_id: "car_gps_longitude_sensor"
      state: "{{ state_attr('device_tracker.car_location', 'longitude') | string }}"
      unit_of_measurement: "degrees"
      icon: "mdi:map-marker"

    - name: "Car GPS Map URL"
      unique_id: "car_gps_map_url_sensor"
      state: >
        {% set latitude = states('sensor.car_gps_latitude') %}
        {% set longitude = states('sensor.car_gps_longitude') %}
        {% if latitude not in ['unknown', 'unavailable', 'None'] and longitude not in ['unknown', 'unavailable', 'None'] %}
          https://www.google.com/maps?q={{ latitude }},{{ longitude }}
        {% else %}
          Coordinates not available
        {% endif %}
      icon: "mdi:map"

    - name: "Car Today Distance"
      unique_id: "car_daily_distance_traveled_sensor"
      unit_of_measurement: "km"
      state: >
        {% set current = states('sensor.car_mileage') | float(default=none) %}
        {% set previous = states('input_number.previous_odometer_reading') | float(default=none) %}

        {% if current is not none and previous is not none and current >= previous %}
          {{ (current - previous) | round(2) }}
        {% else %}
          {{ none }}
        {% endif %}
      icon: "mdi:map-marker-distance"

    - name: "Car Fuel Remaining"
      unique_id: "car_fuel_tank_remaining_sensor"
      state: >
        {% set current_fuel_quantity = states('sensor.car_fuel_quantity') %}
        {% set max_fuel_capacity = 44 %}
        {% if current_fuel_quantity not in ['unknown', 'unavailable'] %}
          {% set current_fuel_quantity = current_fuel_quantity | float %}
          {% set percent_remaining = (current_fuel_quantity / max_fuel_capacity) * 100 %}

          {% if current_fuel_quantity == current_fuel_quantity | round(0) %}
            {% set fuel_display = current_fuel_quantity | round(0) | int %}
          {% else %}
            {% set fuel_display = current_fuel_quantity %}
          {% endif %}

          {% if percent_remaining == percent_remaining | round(0) %}
            {% set percent_display = percent_remaining | round(0) | int %}
          {% else %}
            {% set percent_display = percent_remaining | round(2) %}
          {% endif %}

          {{ fuel_display }}L ({{ percent_display }}%)
        {% else %}
          Unknown
        {% endif %}
      icon: "mdi:fuel"

    - name: "Car Engine Distance"
      unique_id: "car_engine_distance_sensor"
      unit_of_measurement: "km"
      state: >
        {% set engine_replacement_km = 68899 %}
        {% set current_mileage = states('sensor.car_mileage') | float(default=none) %}
        {% if current_mileage is not none and current_mileage > engine_replacement_km %}
          {{ (current_mileage - engine_replacement_km) | round(2) }}
        {% else %}
          {{ none }}
        {% endif %}
      icon: "mdi:engine"

    - name: "Car YTD Distance"
      unique_id: "car_yearly_distance_traveled_sensor"
      unit_of_measurement: "km"
      state: >
        {% set previous_year = states('input_number.previous_year_mileage') | float(default=none) %}
        {% set current = states('sensor.car_mileage') | float(default=none) %}
        {% if previous_year is not none and current is not none %}
          {% set distance = current - previous_year %}
          {% if distance > 0 %}
            {{ distance | round(2) }}
          {% else %}
            {{ none }}
          {% endif %}
        {% else %}
          {{ none }}
        {% endif %}
      icon: "mdi:map-marker-distance"

    - name: "Today Driving Time"
      unique_id: "car_daily_driving_time"
      unit_of_measurement: "min"
      state: >
        {% set total_seconds = states('input_number.daily_driving_seconds') | int(default=0) %}
        {% set minutes = total_seconds // 60 %}
        {% set seconds = total_seconds % 60 %}
        {{ "%d.%02d" | format(minutes, seconds) }}
      attributes:
        readable_time: >
          {% set total_seconds = states('input_number.daily_driving_seconds') | int(default=0) %}
          {% set hours = total_seconds // 3600 %}
          {% set minutes = (total_seconds % 3600) // 60 %}
          {% set seconds = total_seconds % 60 %}
          {% if hours > 0 %}
            {{ hours }}h {{ minutes }}m {{ seconds }}s
          {% else %}
            {{ minutes }}m {{ seconds }}s
          {% endif %}
      icon: "mdi:car-clock"

    - name: "YTD Driving Time"
      unique_id: "car_yearly_driving_time"
      unit_of_measurement: "h"
      state: >
        {% set total_seconds = states('input_number.yearly_driving_seconds') | int(default=0) %}
        {% set hours = total_seconds // 3600 %}
        {% set minutes = (total_seconds % 3600) // 60 %}
        {{ "%d.%02d" | format(hours, minutes) }}
      attributes:
        readable_time: >
          {% set total_seconds = states('input_number.yearly_driving_seconds') | int(default=0) %}
          {% set days = total_seconds // 86400 %}
          {% set hours = (total_seconds % 86400) // 3600 %}
          {% set minutes = (total_seconds % 3600) // 60 %}
          {% set seconds = total_seconds % 60 %}
          {% if days > 0 %}
            {{ days }}d {{ hours }}h {{ minutes }}m {{ seconds }}s
          {% elif hours > 0 %}
            {{ hours }}h {{ minutes }}m {{ seconds }}s
          {% else %}
            {{ minutes }}m {{ seconds }}s
          {% endif %}
      icon: "mdi:car-clock"

    - name: "Windscreen Freeze Risk"
      unique_id: "windscreen_freeze_risk_sensor"
      state: >
        {% set temp = states('sensor.weather_temperature') | float(999) %}
        {% set dp   = states('sensor.weather_dew_point')   | float(999) %}
        {% set rh   = states('sensor.weather_humidity')    | float(0)   %}
        {% set cloud= states('sensor.weather_cloud_coverage') | float(100) %}
        {% set wind = states('sensor.weather_wind_speed')  | float(0)   %}
        {% set cond = (states('sensor.weather_condition') | lower) or '' %}
        {% set rain = states('sensor.weather_rain') | float(0) %}
        {% set snow = states('sensor.weather_snow') | float(0) %}

        {% set keywords = ['rain','snow','sleet','mist','drizzle','shower'] %}
        {% set has_precip = (keywords | select('in', cond) | list | count > 0)
                            or (rain > 0 or snow > 0) %}

        {% set frost_core = (dp <= 1 and temp <= 3) or (temp <= 0 and has_precip) %}
        {% set calm_clear = (cloud < 70) and (wind < 25) %}

        {% set prev = states('sensor.windscreen_freeze_risk') %}
        {% set thawing = (temp > 4) and (rh < 80) and is_state('sun.sun','above_horizon') %}

        {% if frost_core and calm_clear %}
          Likely Frozen
        {% elif prev == 'Likely Frozen' and not thawing %}
          Likely Frozen
        {% else %}
          Not Frozen
        {% endif %}
      attributes:
        Frozen?: >
          {% set temp = states('sensor.weather_temperature') | float(999) %}
          {% set dp   = states('sensor.weather_dew_point')   | float(999) %}
          {% set rh   = states('sensor.weather_humidity')    | float(0)   %}
          {% set cloud= states('sensor.weather_cloud_coverage') | float(100) %}
          {% set wind = states('sensor.weather_wind_speed')  | float(0)   %}
          {% set cond = (states('sensor.weather_condition') | lower) or '' %}
          {% set rain = states('sensor.weather_rain') | float(0) %}
          {% set snow = states('sensor.weather_snow') | float(0) %}
          {% set has_precip = (['rain','snow','sleet','mist','drizzle','shower'] | select('in', cond) | list | count > 0)
                              or (rain > 0 or snow > 0) %}
          {% set frost_core = (dp <= 1 and temp <= 3) or (temp <= 0 and has_precip) %}
          {% set calm_clear = (cloud < 70) and (wind < 25) %}
          {% set thawing = (temp > 4) and (rh < 80) and is_state('sun.sun','above_horizon') %}
          {% set prev = states('sensor.windscreen_freeze_risk') %}
          {% if (frost_core and calm_clear) or (prev == 'Likely Frozen' and not thawing) %}
            Yes
          {% elif dp > 1 or temp > 3 %}
            No — Too warm ({{ temp }}°C / dew point {{ dp }}°C)
          {% elif cloud >= 70 %}
            No — Too cloudy ({{ cloud }}%)
          {% elif wind >= 25 %}
            No — Too windy ({{ wind }} km/h)
          {% elif thawing %}
            No — Thawing
          {% else %}
            No — Conditions borderline but not all criteria met
          {% endif %}
      icon: >
        {% if is_state('sensor.windscreen_freeze_risk','Likely Frozen') %}
          mdi:snowflake
        {% else %}
          mdi:weather-sunny
        {% endif %}
